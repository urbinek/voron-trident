#####################################################################
# https://ellis3dp.com/Print-Tuning-Guide/articles/useful_macros/pause_resume_filament.html
#####################################################################
[delayed_gcode DISABLEFILAMENTSENSOR]
initial_duration: 1
gcode:
    SET_FILAMENT_SENSOR SENSOR=filament_encoder_sensor ENABLE=1
    SET_FILAMENT_SENSOR SENSOR=filament_switch_sensor ENABLE=1

[gcode_macro F_CONSUMED]
variable_filament_consumed: 0
variable_filament_length: 940   # length between the sensor and extruder
variable_filament_tail: 140     # how much left sticking out of extruder

gcode:
    M117 Delaying PAUSE to use leftover filament: { filament_length|float}
    # save current filament consumption
    SET_GCODE_VARIABLE MACRO=F_CONSUMED VARIABLE=filament_consumed VALUE={printer.print_stats.filament_used}
    # start checking filament consumption
    UPDATE_DELAYED_GCODE ID=DELAY_PAUSE DURATION=1

[delayed_gcode DELAY_PAUSE]
gcode:
    # use set for easier reading
    {% set consumed=printer["gcode_macro F_CONSUMED"].filament_consumed %}
    {% set length=printer["gcode_macro F_CONSUMED"].filament_length %}
    {% set tail=printer["gcode_macro F_CONSUMED"].filament_tail %}

    # check if predetermine length is reached
    {% if printer.print_stats.filament_used|float <= (consumed|float + length|float - tail|float) %}
        # start looping this script every second
        # M117 Consumed {printer.print_stats.filament_used|float - consumed|float}/{(length|float)}...
        UPDATE_DELAYED_GCODE ID=DELAY_PAUSE DURATION=1
    {% else %}
        M117 Used {printer.print_stats.filament_used|float - consumed|float}mm of leftover filament, running macro: PAUSE
        PAUSE
    {% endif %}

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
    M117 Starting macro: PAUSE
    # Parameters
    {% set z = params.Z|default(20)|int %}                                                   ; z hop amount

    {% if printer['pause_resume'].is_paused|int == 0 %}
        M117 Disable filament sensors
        SET_FILAMENT_SENSOR SENSOR=filament_encoder_sensor ENABLE=0                          ; disable filament sensor
        SET_FILAMENT_SENSOR SENSOR=filament_switch_sensor ENABLE=0                           ; disable filament sensor

        M117 Save print parameters
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}                              ; set z hop variable for reference in resume macro
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}    ; set hotend temp variable for reference in resume macro
        SAVE_GCODE_STATE NAME=PAUSE                                                          ; save current print position for resume
        BASE_PAUSE                                                                           ; pause print

        {% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}       ; check that zhop doesn't exceed z max
            M117 Rising toolhead
            G91                                                                              ; relative positioning
            G1 Z{z} F900                                                                     ; raise Z up by z hop amount
        {% else %}
            M117 Can't rise toolhead! Skipping
            M117 Pause zhop exceeds maximum Z height                                         ; if z max is exceeded, show message and set zhop value for resume to 0
            SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
        {% endif %}
        G90                                                                                  ; absolute positioning

        M117 Moving toolhead to service position
        G1 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} F5000   ; park toolhead at front center
        SAVE_GCODE_STATE NAME=PAUSEPARK                                                      ; save parked position in case toolhead is moved during the pause (otherwise the return zhop can error)

        M117 "Turning off hotend"
        M104 S0                                                                              ; turn off hotend
        SET_IDLE_TIMEOUT TIMEOUT=43200                                                       ; set timeout to 12 hours
    {% else %}
        M117 Printer not printing. State: {printer['pause_resume'].is_paused|int}
    {% endif %}

[gcode_macro RESUME]
rename_existing: BASE_RESUME
variable_zhop: 0
variable_etemp: 0
gcode:
    M117 Starting macro: RESUME

    # Parameters
    {% set e = params.E|default(2.5)|int %}                                                  ; hotend prime amount (in mm)

    {% if printer['pause_resume'].is_paused|int == 1 %}
        M117 Enable filament sensors
        SET_FILAMENT_SENSOR SENSOR=filament_encoder_sensor ENABLE=1                          ; enable filament sensor
        SET_FILAMENT_SENSOR SENSOR=filament_switch_sensor ENABLE=1                           ; enable filament sensor

        #INITIAL_RGB                                                                         ; reset LCD color
        SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}          ; set timeout back to configured value

        M117 Heating hotend
        {% if etemp > 0 %}
            M109 S{etemp|int}                                                                ; wait for hotend to heat back up
        {% endif %}

        M117 Move toolhead back to parked position
        RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=100                             ; go back to parked position in case toolhead was moved during pause (otherwise the return zhop can error)
        G91                                                                                  ; relative positioning
        M83                                                                                  ; relative extruder positioning

        M117 Prime hotend and return to Z position
        {% if printer[printer.toolhead.extruder].temperature >= printer.configfile.settings.extruder.min_extrude_temp %}
            G1 Z{zhop * -1} E{e} F900                                                        ; prime hotend by E, lower Z back down
        {% else %}
            G1 Z{zhop * -1} F900                                                             ; lower Z back down without priming (just in case we are testing the macro with cold hotend)
        {% endif %}

        M117 Restore toolhead position
        RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=60                                  ; restore position

        M117 Resume printing
        BASE_RESUME                                                                          ; resume print
    {% else %}
        M117 Printer not paused. State: {printer['pause_resume'].is_paused|int}
    {% endif %}

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    M117 Starting macro: CANCEL_PRINT
    SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}              ; set timeout back to configured value
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    PRINT_END
    BASE_CANCEL_PRINT
